#! /usr/bin/env node
"use strict";function readNameCache(key){return UglifyJS.readNameCache(ARGS.name_cache,key)}function writeNameCache(key,cache){return UglifyJS.writeNameCache(ARGS.name_cache,key,cache)}function extractRegex(str){if(/^\/.*\/[a-zA-Z]*$/.test(str)){var regex_pos=str.lastIndexOf("/");return new RegExp(str.substr(1,regex_pos-1),str.substr(regex_pos+1))}throw new Error("Invalid regular expression: "+str)}function normalize(o){for(var i in o)o.hasOwnProperty(i)&&/-/.test(i)&&(o[i.replace(/-/g,"_")]=o[i],delete o[i])}function getOptions(flag,constants){var x=ARGS[flag];if(null==x||x===!1)return null;var ret={};if(""!==x){Array.isArray(x)&&(x=x.map(function(v){return"("+v+")"}).join(", "));var ast;try{ast=UglifyJS.parse(x,{expression:!0})}catch(ex){ex instanceof UglifyJS.JS_Parse_Error&&(print_error("Error parsing arguments for flag `"+flag+"': "+x),process.exit(1))}ast.walk(new UglifyJS.TreeWalker(function(node){if(!(node instanceof UglifyJS.AST_Seq)){if(node instanceof UglifyJS.AST_Assign){var name=node.left.print_to_string({beautify:!1}).replace(/-/g,"_"),value=node.right;return constants&&(value=new Function("return ("+value.print_to_string()+")")()),ret[name]=value,!0}if(node instanceof UglifyJS.AST_Symbol||node instanceof UglifyJS.AST_Binary){var name=node.print_to_string({beautify:!1}).replace(/-/g,"_");return ret[name]=!0,!0}print_error(node.TYPE),print_error("Error parsing arguments for flag `"+flag+"': "+x),process.exit(1)}}))}return ret}function read_whole_file(filename,cb){if("-"==filename){var chunks=[];process.stdin.setEncoding("utf-8"),process.stdin.on("data",function(chunk){chunks.push(chunk)}).on("end",function(){cb(null,chunks.join(""))}),process.openStdin()}else fs.readFile(filename,"utf-8",cb)}function time_it(name,cont){var t1=(new Date).getTime(),ret=cont();if(ARGS.stats){var spent=(new Date).getTime()-t1;STATS[name]?STATS[name]+=spent:STATS[name]=spent}return ret}function print_error(msg){console.error("%s",msg)}function print(txt){console.log("%s",txt)}var UglifyJS=require("../tools/node"),sys=require("util"),yargs=require("yargs"),fs=require("fs"),path=require("path"),async=require("async"),acorn,ARGS=yargs.usage("$0 input1.js [input2.js ...] [options]\nUse a single dash to read input from the standard input.\n\nNOTE: by default there is no mangling/compression.\nWithout [options] it will simply parse input files and dump the AST\nwith whitespace and comments discarded.  To achieve compression and\nmangling you need to use `-c` and `-m`.").describe("source-map","Specify an output file where to generate source map.").describe("source-map-root","The path to the original source to be included in the source map.").describe("source-map-url","The path to the source map to be added in //# sourceMappingURL.  Defaults to the value passed with --source-map.").describe("source-map-include-sources","Pass this flag if you want to include the content of source files in the source map as sourcesContent property.").describe("in-source-map","Input source map, useful if you're compressing JS that was generated from some other original code.").describe("screw-ie8","Pass this flag if you don't care about full compliance with Internet Explorer 6-8 quirks (by default UglifyJS will try to be IE-proof).").describe("expr","Parse a single expression, rather than a program (for parsing JSON)").describe("p","Skip prefix for original filenames that appear in source maps. For example -p 3 will drop 3 directories from file names and ensure they are relative paths. You can also specify -p relative, which will make UglifyJS figure out itself the relative paths between original sources, the source map and the output file.").describe("o","Output file (default STDOUT).").describe("b","Beautify output/specify output options.").describe("m","Mangle names/pass mangler options.").describe("r","Reserved names to exclude from mangling.").describe("c","Enable compressor/pass compressor options. Pass options like -c hoist_vars=false,if_return=false. Use -c with no argument to use the default compression options.").describe("d","Global definitions").describe("e","Embed everything in a big function, with a configurable parameter/argument list.").describe("comments",'Preserve copyright comments in the output. By default this works like Google Closure, keeping JSDoc-style comments that contain "@license" or "@preserve". You can optionally pass one of the following arguments to this flag:\n- "all" to keep all comments\n- a valid JS regexp (needs to start with a slash) to keep only comments that match.\nNote that currently not *all* comments can be kept when compression is on, because of dead code removal or cascading statements into sequences.').describe("preamble","Preamble to prepend to the output.  You can use this to insert a comment, for example for licensing information.  This will not be parsed, but the source map will adjust for its presence.").describe("stats","Display operations run time on STDERR.").describe("acorn","Use Acorn for parsing.").describe("spidermonkey","Assume input files are SpiderMonkey AST format (as JSON).").describe("self","Build itself (UglifyJS2) as a library (implies --wrap=UglifyJS --export-all)").describe("wrap","Embed everything in a big function, making the “exports” and “global” variables available. You need to pass an argument to this option to specify the name that your module will take when included in, say, a browser.").describe("export-all","Only used when --wrap, this tells UglifyJS to add code to automatically export all globals.").describe("lint","Display some scope warnings").describe("v","Verbose").describe("V","Print version number and exit.").describe("noerr","Don't throw an error for unknown options in -c, -b or -m.").describe("bare-returns","Allow return outside of functions.  Useful when minifying CommonJS modules.").describe("keep-fnames","Do not mangle/drop function names.  Useful for code relying on Function.prototype.name.").describe("quotes","Quote style (0 - auto, 1 - single, 2 - double, 3 - original)").describe("reserved-file","File containing reserved names").describe("reserve-domprops","Make (most?) DOM properties reserved for --mangle-props").describe("mangle-props","Mangle property names").describe("mangle-regex","Only mangle property names matching the regex").describe("name-cache","File to hold mangled names mappings").describe("pure-funcs","List of functions that can be safely removed if their return value is not used").describe("dump-spidermonkey-ast","Dump SpiderMonkey AST to stdout.").alias("p","prefix").alias("o","output").alias("v","verbose").alias("b","beautify").alias("m","mangle").alias("c","compress").alias("d","define").alias("r","reserved").alias("V","version").alias("e","enclose").alias("q","quotes").string("source-map").string("source-map-root").string("source-map-url").string("b").string("beautify").string("m").string("mangle").string("c").string("compress").string("d").string("define").string("e").string("enclose").string("comments").string("wrap").string("p").string("prefix").string("name-cache").array("reserved-file").array("pure-funcs")["boolean"]("expr")["boolean"]("source-map-include-sources")["boolean"]("screw-ie8")["boolean"]("export-all")["boolean"]("self")["boolean"]("v")["boolean"]("verbose")["boolean"]("stats")["boolean"]("acorn")["boolean"]("spidermonkey")["boolean"]("dump-spidermonkey-ast")["boolean"]("lint")["boolean"]("V")["boolean"]("version")["boolean"]("noerr")["boolean"]("bare-returns")["boolean"]("keep-fnames")["boolean"]("mangle-props")["boolean"]("reserve-domprops").wrap(80).argv;if(normalize(ARGS),ARGS.noerr&&(UglifyJS.DefaultsError.croak=function(msg,defs){print_error("WARN: "+msg)}),ARGS.version||ARGS.V){var json=require("../package.json");print(json.name+" "+json.version),process.exit(0)}if(ARGS.ast_help){var desc=UglifyJS.describe_ast();print("string"==typeof desc?desc:JSON.stringify(desc,null,2)),process.exit(0)}(ARGS.h||ARGS.help)&&(print(yargs.help()),process.exit(0)),ARGS.acorn&&(acorn=require("acorn"));var COMPRESS=getOptions("c",!0),MANGLE=getOptions("m",!0),BEAUTIFY=getOptions("b",!0),RESERVED=null;ARGS.reserved_file&&ARGS.reserved_file.forEach(function(filename){RESERVED=UglifyJS.readReservedFile(filename,RESERVED)}),ARGS.reserve_domprops&&(RESERVED=UglifyJS.readDefaultReservedFile(RESERVED)),ARGS.d&&COMPRESS&&(COMPRESS.global_defs=getOptions("d")),ARGS.pure_funcs&&COMPRESS&&(COMPRESS.pure_funcs=ARGS.pure_funcs),ARGS.r&&MANGLE&&(MANGLE.except=ARGS.r.replace(/^\s+|\s+$/g).split(/\s*,+\s*/)),RESERVED&&MANGLE&&(MANGLE.except?MANGLE.except=MANGLE.except.concat(RESERVED.vars):MANGLE.except=RESERVED.vars),ARGS.quotes===!0&&(ARGS.quotes=3);var OUTPUT_OPTIONS={beautify:!!BEAUTIFY,preamble:ARGS.preamble||null,quote_style:null!=ARGS.quotes?ARGS.quotes:0};if(ARGS.screw_ie8&&(COMPRESS&&(COMPRESS.screw_ie8=!0),MANGLE&&(MANGLE.screw_ie8=!0),OUTPUT_OPTIONS.screw_ie8=!0),ARGS.keep_fnames&&(COMPRESS&&(COMPRESS.keep_fnames=!0),MANGLE&&(MANGLE.keep_fnames=!0)),BEAUTIFY&&UglifyJS.merge(OUTPUT_OPTIONS,BEAUTIFY),null!=ARGS.comments)if(/^\/.*\/[a-zA-Z]*$/.test(ARGS.comments))try{OUTPUT_OPTIONS.comments=extractRegex(ARGS.comments)}catch(e){print_error("ERROR: Invalid --comments: "+e.message)}else"all"==ARGS.comments?OUTPUT_OPTIONS.comments=!0:OUTPUT_OPTIONS.comments=function(node,comment){var text=comment.value,type=comment.type;return"comment2"==type?/@preserve|@license|@cc_on/i.test(text):void 0};var files=ARGS._.slice();ARGS.self&&(files.length>0&&print_error("WARN: Ignoring input files since --self was passed"),files=UglifyJS.FILES,ARGS.wrap||(ARGS.wrap="UglifyJS"));var ORIG_MAP=ARGS.in_source_map;ORIG_MAP&&(ORIG_MAP=JSON.parse(fs.readFileSync(ORIG_MAP)),0==files.length&&(print_error("INFO: Using file from the input source map: "+ORIG_MAP.file),files=[ORIG_MAP.file]),null==ARGS.source_map_root&&(ARGS.source_map_root=ORIG_MAP.sourceRoot)),0==files.length&&(files=["-"]),files.indexOf("-")>=0&&ARGS.source_map&&(print_error("ERROR: Source map doesn't work with input from STDIN"),process.exit(1)),files.filter(function(el){return"-"==el}).length>1&&(print_error("ERROR: Can read a single file from STDIN (two or more dashes specified)"),process.exit(1));var STATS={},OUTPUT_FILE=ARGS.o,TOPLEVEL=null,P_RELATIVE=ARGS.p&&"relative"==ARGS.p,SOURCES_CONTENT={},SOURCE_MAP=ARGS.source_map?UglifyJS.SourceMap({file:P_RELATIVE?path.relative(path.dirname(ARGS.source_map),OUTPUT_FILE):OUTPUT_FILE,root:ARGS.source_map_root,orig:ORIG_MAP}):null;OUTPUT_OPTIONS.source_map=SOURCE_MAP;try{var output=UglifyJS.OutputStream(OUTPUT_OPTIONS),compressor=COMPRESS&&UglifyJS.Compressor(COMPRESS)}catch(ex){ex instanceof UglifyJS.DefaultsError&&(print_error(ex.msg),print_error("Supported options:"),print_error(sys.inspect(ex.defs)),process.exit(1))}async.eachLimit(files,1,function(file,cb){read_whole_file(file,function(err,code){if(err&&(print_error("ERROR: can't read file: "+file),process.exit(1)),null!=ARGS.p)if(P_RELATIVE)file=path.relative(path.dirname(ARGS.source_map),file).replace(/\\/g,"/");else{var p=parseInt(ARGS.p,10);isNaN(p)||(file=file.replace(/^\/+/,"").split(/\/+/).slice(ARGS.p).join("/"))}SOURCES_CONTENT[file]=code,time_it("parse",function(){if(ARGS.spidermonkey){var program=JSON.parse(code);TOPLEVEL?TOPLEVEL.body=TOPLEVEL.body.concat(program.body):TOPLEVEL=program}else if(ARGS.acorn)TOPLEVEL=acorn.parse(code,{locations:!0,sourceFile:file,program:TOPLEVEL});else try{TOPLEVEL=UglifyJS.parse(code,{filename:file,toplevel:TOPLEVEL,expression:ARGS.expr,bare_returns:ARGS.bare_returns})}catch(ex){throw ex instanceof UglifyJS.JS_Parse_Error&&(print_error("Parse error at "+file+":"+ex.line+","+ex.col),print_error(ex.message),print_error(ex.stack),process.exit(1)),ex}}),cb()})},function(){if((ARGS.acorn||ARGS.spidermonkey)&&time_it("convert_ast",function(){TOPLEVEL=UglifyJS.AST_Node.from_mozilla_ast(TOPLEVEL)}),null!=ARGS.wrap&&(TOPLEVEL=TOPLEVEL.wrap_commonjs(ARGS.wrap,ARGS.export_all)),null!=ARGS.enclose){var arg_parameter_list=ARGS.enclose;arg_parameter_list===!0?arg_parameter_list=[]:arg_parameter_list instanceof Array||(arg_parameter_list=[arg_parameter_list]),TOPLEVEL=TOPLEVEL.wrap_enclose(arg_parameter_list)}(ARGS.mangle_props||ARGS.name_cache)&&function(){var regex,reserved=RESERVED?RESERVED.props:null,cache=readNameCache("props");try{regex=ARGS.mangle_regex?extractRegex(ARGS.mangle_regex):null}catch(e){print_error("ERROR: Invalid --mangle-regex: "+e.message),process.exit(1)}TOPLEVEL=UglifyJS.mangle_properties(TOPLEVEL,{reserved:reserved,cache:cache,only_cache:!ARGS.mangle_props,regex:regex}),writeNameCache("props",cache)}();var SCOPE_IS_NEEDED=COMPRESS||MANGLE||ARGS.lint,TL_CACHE=readNameCache("vars");if(SCOPE_IS_NEEDED&&time_it("scope",function(){TOPLEVEL.figure_out_scope({screw_ie8:ARGS.screw_ie8,cache:TL_CACHE}),ARGS.lint&&TOPLEVEL.scope_warnings()}),COMPRESS&&time_it("squeeze",function(){TOPLEVEL=TOPLEVEL.transform(compressor)}),SCOPE_IS_NEEDED&&time_it("scope",function(){TOPLEVEL.figure_out_scope({screw_ie8:ARGS.screw_ie8,cache:TL_CACHE}),MANGLE&&!TL_CACHE&&TOPLEVEL.compute_char_frequency(MANGLE)}),MANGLE&&time_it("mangle",function(){MANGLE.cache=TL_CACHE,TOPLEVEL.mangle_names(MANGLE)}),writeNameCache("vars",TL_CACHE),ARGS.source_map_include_sources)for(var file in SOURCES_CONTENT)SOURCES_CONTENT.hasOwnProperty(file)&&SOURCE_MAP.get().setSourceContent(file,SOURCES_CONTENT[file]);if(ARGS.dump_spidermonkey_ast)print(JSON.stringify(TOPLEVEL.to_mozilla_ast(),null,2));else{if(time_it("generate",function(){TOPLEVEL.print(output)}),output=output.get(),SOURCE_MAP){fs.writeFileSync(ARGS.source_map,SOURCE_MAP,"utf8");var source_map_url=ARGS.source_map_url||(P_RELATIVE?path.relative(path.dirname(OUTPUT_FILE),ARGS.source_map):ARGS.source_map);output+="\n//# sourceMappingURL="+source_map_url}OUTPUT_FILE?fs.writeFileSync(OUTPUT_FILE,output,"utf8"):print(output)}if(ARGS.stats){print_error(UglifyJS.string_template("Timing information (compressed {count} files):",{count:files.length}));for(var i in STATS)STATS.hasOwnProperty(i)&&print_error(UglifyJS.string_template("- {name}: {time}s",{name:i,time:(STATS[i]/1e3).toFixed(3)}))}});var Arrive=function(window,$,undefined){function exposeUnbindApi(eventObj,exposeTo,funcName){utils.addMethod(exposeTo,funcName,eventObj.unbindEvent),utils.addMethod(exposeTo,funcName,eventObj.unbindEventWithSelectorOrCallback),utils.addMethod(exposeTo,funcName,eventObj.unbindEventWithSelectorAndCallback)}function exposeApi(exposeTo){exposeTo.arrive=arriveEvents.bindEvent,exposeUnbindApi(arriveEvents,exposeTo,"unbindArrive"),exposeTo.leave=leaveEvents.bindEvent,exposeUnbindApi(leaveEvents,exposeTo,"unbindLeave")}if(window.MutationObserver&&"undefined"!=typeof HTMLElement){var arriveUniqueId=0,utils=function(){var matches=HTMLElement.prototype.matches||HTMLElement.prototype.webkitMatchesSelector||HTMLElement.prototype.mozMatchesSelector||HTMLElement.prototype.msMatchesSelector;return{matchesSelector:function(elem,selector){return elem instanceof HTMLElement&&matches.call(elem,selector)},addMethod:function(object,name,fn){var old=object[name];object[name]=function(){return fn.length==arguments.length?fn.apply(this,arguments):"function"==typeof old?old.apply(this,arguments):void 0}},callCallbacks:function(callbacksToBeCalled){for(var cb,i=0;cb=callbacksToBeCalled[i];i++)cb.callback.call(cb.elem,cb.elem)},checkChildNodesRecursively:function(nodes,registrationData,matchFunc,callbacksToBeCalled){for(var node,i=0;node=nodes[i];i++)matchFunc(node,registrationData,callbacksToBeCalled)&&callbacksToBeCalled.push({callback:registrationData.callback,elem:node}),node.childNodes.length>0&&utils.checkChildNodesRecursively(node.childNodes,registrationData,matchFunc,callbacksToBeCalled)},mergeArrays:function(firstArr,secondArr){var attrName,options={};for(attrName in firstArr)options[attrName]=firstArr[attrName];for(attrName in secondArr)options[attrName]=secondArr[attrName];return options},toElementsArray:function(elements){return"undefined"==typeof elements||"number"==typeof elements.length&&elements!==window||(elements=[elements]),elements}}}(),EventsBucket=function(){var EventsBucket=function(){this._eventsBucket=[],this._beforeAdding=null,this._beforeRemoving=null};return EventsBucket.prototype.addEvent=function(target,selector,options,callback){var newEvent={target:target,selector:selector,options:options,callback:callback,firedElems:[]};return this._beforeAdding&&this._beforeAdding(newEvent),this._eventsBucket.push(newEvent),newEvent},EventsBucket.prototype.removeEvent=function(compareFunction){for(var registeredEvent,i=this._eventsBucket.length-1;registeredEvent=this._eventsBucket[i];i--)compareFunction(registeredEvent)&&(this._beforeRemoving&&this._beforeRemoving(registeredEvent),this._eventsBucket.splice(i,1))},EventsBucket.prototype.beforeAdding=function(beforeAdding){this._beforeAdding=beforeAdding},EventsBucket.prototype.beforeRemoving=function(beforeRemoving){this._beforeRemoving=beforeRemoving},EventsBucket}(),MutationEvents=function(getObserverConfig,onMutation){var eventsBucket=new EventsBucket,me=this,defaultOptions={fireOnAttributesModification:!1};return eventsBucket.beforeAdding(function(registrationData){var observer,target=registrationData.target;target!==window.document&&target!==window||(target=document.getElementsByTagName("html")[0]),observer=new MutationObserver(function(e){onMutation.call(this,e,registrationData)});var config=getObserverConfig(registrationData.options);observer.observe(target,config),registrationData.observer=observer,registrationData.me=me}),eventsBucket.beforeRemoving(function(eventData){eventData.observer.disconnect()}),this.bindEvent=function(selector,options,callback){options=utils.mergeArrays(defaultOptions,options);for(var elements=utils.toElementsArray(this),i=0;i<elements.length;i++)eventsBucket.addEvent(elements[i],selector,options,callback)},this.unbindEvent=function(){var elements=utils.toElementsArray(this);eventsBucket.removeEvent(function(eventObj){for(var i=0;i<elements.length;i++)if(this===undefined||eventObj.target===elements[i])return!0;return!1})},this.unbindEventWithSelectorOrCallback=function(selector){var compareFunction,elements=utils.toElementsArray(this),callback=selector;compareFunction="function"==typeof selector?function(eventObj){for(var i=0;i<elements.length;i++)if((this===undefined||eventObj.target===elements[i])&&eventObj.callback===callback)return!0;return!1}:function(eventObj){for(var i=0;i<elements.length;i++)if((this===undefined||eventObj.target===elements[i])&&eventObj.selector===selector)return!0;return!1},eventsBucket.removeEvent(compareFunction)},this.unbindEventWithSelectorAndCallback=function(selector,callback){var elements=utils.toElementsArray(this);eventsBucket.removeEvent(function(eventObj){for(var i=0;i<elements.length;i++)if((this===undefined||eventObj.target===elements[i])&&eventObj.selector===selector&&eventObj.callback===callback)return!0;return!1})},this},ArriveEvents=function(){function getArriveObserverConfig(options){var config={attributes:!1,childList:!0,subtree:!0};return options.fireOnAttributesModification&&(config.attributes=!0),config}function onArriveMutation(mutations,registrationData){mutations.forEach(function(mutation){var newNodes=mutation.addedNodes,targetNode=mutation.target,callbacksToBeCalled=[];null!==newNodes&&newNodes.length>0?utils.checkChildNodesRecursively(newNodes,registrationData,nodeMatchFunc,callbacksToBeCalled):"attributes"===mutation.type&&nodeMatchFunc(targetNode,registrationData,callbacksToBeCalled)&&callbacksToBeCalled.push({callback:registrationData.callback,elem:node}),utils.callCallbacks(callbacksToBeCalled)})}function nodeMatchFunc(node,registrationData,callbacksToBeCalled){if(utils.matchesSelector(node,registrationData.selector)&&(node._id===undefined&&(node._id=arriveUniqueId++),-1==registrationData.firedElems.indexOf(node._id))){if(registrationData.options.onceOnly){if(0!==registrationData.firedElems.length)return;registrationData.me.unbindEventWithSelectorAndCallback.call(registrationData.target,registrationData.selector,registrationData.callback)}registrationData.firedElems.push(node._id),callbacksToBeCalled.push({callback:registrationData.callback,elem:node})}}var arriveDefaultOptions={fireOnAttributesModification:!1,onceOnly:!1,existing:!1};arriveEvents=new MutationEvents(getArriveObserverConfig,onArriveMutation);var mutationBindEvent=arriveEvents.bindEvent;return arriveEvents.bindEvent=function(selector,options,callback){"undefined"==typeof callback?(callback=options,options=arriveDefaultOptions):options=utils.mergeArrays(arriveDefaultOptions,options);var elements=utils.toElementsArray(this);if(options.existing){for(var existing=[],i=0;i<elements.length;i++)for(var nodes=elements[i].querySelectorAll(selector),j=0;j<nodes.length;j++)existing.push({callback:callback,elem:nodes[j]});if(options.onceOnly&&existing.length)return callback.call(existing[0].elem);setTimeout(utils.callCallbacks,1,existing)}mutationBindEvent.call(this,selector,options,callback)},arriveEvents},LeaveEvents=function(){function getLeaveObserverConfig(options){var config={childList:!0,subtree:!0};return config}function onLeaveMutation(mutations,registrationData){mutations.forEach(function(mutation){var removedNodes=mutation.removedNodes,callbacksToBeCalled=[];null!==removedNodes&&removedNodes.length>0&&utils.checkChildNodesRecursively(removedNodes,registrationData,nodeMatchFunc,callbacksToBeCalled),utils.callCallbacks(callbacksToBeCalled)})}function nodeMatchFunc(node,registrationData){return utils.matchesSelector(node,registrationData.selector)}var leaveDefaultOptions={};leaveEvents=new MutationEvents(getLeaveObserverConfig,onLeaveMutation);var mutationBindEvent=leaveEvents.bindEvent;return leaveEvents.bindEvent=function(selector,options,callback){"undefined"==typeof callback?(callback=options,options=leaveDefaultOptions):options=utils.mergeArrays(leaveDefaultOptions,options),mutationBindEvent.call(this,selector,options,callback)},leaveEvents},arriveEvents=new ArriveEvents,leaveEvents=new LeaveEvents;$&&exposeApi($.fn),exposeApi(HTMLElement.prototype),exposeApi(NodeList.prototype),exposeApi(HTMLCollection.prototype),exposeApi(HTMLDocument.prototype),exposeApi(Window.prototype);var Arrive={};return exposeUnbindApi(arriveEvents,Arrive,"unbindAllArrive"),exposeUnbindApi(leaveEvents,Arrive,"unbindAllLeave"),Arrive}}(window,"undefined"==typeof jQuery?null:jQuery,void 0);
//# sourceMappingURL=minified/arrive.min.js.map